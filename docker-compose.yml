services:
  frontend:
    build:
      context: .
      dockerfile: packages/frontend/Dockerfile
    ports:
      - '4200:4200'
    depends_on:
      - backend
    networks:
      - app-network
    command: ["node", "packages/frontend/serve-frontend.js"]

  backend:
    build:
      context: .
      dockerfile: packages/backend/Dockerfile
    ports:
      - '3000:3000'
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://alberto:alberto@database:5432/performance-tracker
    command: ["/bin/sh", "-c", "packages/backend/wait-for-db.sh && node dist/packages/backend/main.js"]
    depends_on:
      - database
      - redis
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:3000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  database:
    image: postgres:15
    environment:
      - POSTGRES_USER=alberto
      - POSTGRES_PASSWORD=alberto
      - POSTGRES_DB=performance-tracker
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:7
    ports:
      - '6379:6379'
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata: